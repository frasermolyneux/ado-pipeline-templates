parameters:
- name: azureSubscription
  type: string
- name: terraformFolder
  default: "terraform"
  type: string
- name: terraformVarFile
  default: "tfvars/dev.tfvars"
  type: string
- name: terraformBackendFile
  default: ""
  type: string
- name: terraformBackendSubscriptionId
  default: ""
  type: string
- name: backendResourceGroupName
  type: string
  default: ""
- name: backendStorageAccountName
  type: string
  default: ""
- name: backendContainerName
  default: "tfstate"
  type: string
- name: backendKey
  default: "terraform.tfstate"
  type: string
- name: terraformVersion
  default: latest

steps:
  - task: TerraformInstaller@0
    displayName: 'Terraform: Install'
    inputs:
      terraformVersion: ${{ parameters.terraformVersion }}

  - task: AzureCLI@2
    displayName: 'Terraform Init'
    inputs:
      addSpnToEnvironment: true
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: 'inlineScript'
      inlineScript: | 
        cd ${{ parameters.terraformFolder }}

        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_OIDC_TOKEN=$idToken
        export ARM_TENANT_ID=$tenantId
        export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export ARM_USE_OIDC=true

        if ["${{ parameters.terraformBackendFile }}" -ne ""]; then
          terraform init -backend-config="${{ parameters.terraformBackendFile }}" -var-file=${{ parameters.terraformVarFile }}
        elif
          terraform init -backend-config="subscription_id=${{ parameters.terraformBackendSubscriptionId }}" -backend-config="resource_group_name=${{ parameters.backendResourceGroupName }}" -backend-config="storage_account_name=${{ parameters.backendStorageAccountName }}" -backend-config="container_name=${{ parameters.backendContainerName }}" -backend-config="key=${{ parameters.backendKey }}" -var-file=${{ parameters.terraformVarFile }}
        fi

  - task: AzureCLI@2
    displayName: 'Terraform Validate'
    inputs:
      addSpnToEnvironment: true
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: 'inlineScript'
      inlineScript: | 
        cd ${{ parameters.terraformFolder }}

        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_OIDC_TOKEN=$idToken
        export ARM_TENANT_ID=$tenantId
        export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export ARM_USE_OIDC=true

        terraform validate

  - task: AzureCLI@2
    displayName: 'Terraform Plan'
    inputs:
      addSpnToEnvironment: true
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: 'inlineScript'
      inlineScript: | 
        cd ${{ parameters.terraformFolder }}

        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_OIDC_TOKEN=$idToken
        export ARM_TENANT_ID=$tenantId
        export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export ARM_USE_OIDC=true

        terraform plan -var-file=${{ parameters.terraformVarFile }}

  - task: AzureCLI@2
    displayName: 'Terraform Plan'
    inputs:
      addSpnToEnvironment: true
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: 'inlineScript'
      inlineScript: | 
        cd ${{ parameters.terraformFolder }}

        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_OIDC_TOKEN=$idToken
        export ARM_TENANT_ID=$tenantId
        export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export ARM_USE_OIDC=true

        terraform apply -auto-approve -var-file=${{ parameters.terraformVarFile }}

  - task: AzureCLI@2
    displayName: 'Terraform Output'
    inputs:
      addSpnToEnvironment: true
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: 'inlineScript'
      inlineScript: | 
        cd ${{ parameters.terraformFolder }}

        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_OIDC_TOKEN=$idToken
        export ARM_TENANT_ID=$tenantId
        export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        export ARM_USE_OIDC=true

        terraform output -json > $(Build.ArtifactStagingDirectory)/terraform-output.json

  - powershell: |
      Write-Host "Reading terraform output vars from $(Build.ArtifactStagingDirectory)/terraform-output.json"
      $terraformOutput = Get-Content "$(Build.ArtifactStagingDirectory)/terraform-output.json" | ConvertFrom-Json
      $terraformOutput | Get-Member -MemberType NoteProperty | % { $o = $terraformOutput.($_.Name); Write-Host "Setting variable: $($_.Name)"; Write-Host "##vso[task.setvariable variable=$($_.Name);isoutput=true;issecret=$($o.sensitive)]$($o.value)" }
    name: terraform_output
    displayName: 'Read terraform output vars'
