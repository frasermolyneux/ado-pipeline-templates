parameters:
- name: terraformFolder
  default: "terraform"
  type: string
- name: terraformVarFile
  default: "tfvars/dev.tfvars"
  type: string
- name: terraformBackendFile
  type: string
- name: backendSubscriptionId
  type: string
  default: ""
- name: backendResourceGroupName
  type: string
  default: ""
- name: backendStorageAccountName
  type: string
  default: ""
- name: backendContainerName
  default: "tfstate"
  type: string
- name: backendKey
  default: "terraform.tfstate"
  type: string
- name: backendTags
  default: ""
  type: string
- name: terraformVersion
  default: latest
- name: AZURE_CLIENT_ID
  type: string
- name: AZURE_TENANT_ID
  type: string
- name: AZURE_SUBSCRIPTION_ID
  type: string

steps:
  - task: TerraformInstaller@1
    displayName: 'Terraform: Install'
    inputs:
      terraformVersion: ${{ parameters.terraformVersion }}

  - pwsh: |
      $env:ARM_USE_OIDC = $true
      $env:ARM_CLIENT_ID = "${{ parameters.AZURE_CLIENT_ID }}"
      $env:ARM_TENANT_ID = "${{ parameters.AZURE_TENANT_ID }}"
      $env:ARM_SUBSCRIPTION_ID = "${{ parameters.AZURE_SUBSCRIPTION_ID }}"

      Write-Host "Setting ARM_CLIENT_ID to ${{ parameters.AZURE_CLIENT_ID }}"
      Write-Host "Setting ARM_TENANT_ID to ${{ parameters.ARM_TENANT_ID }}"
      Write-Host "Setting AZURE_SUBSCRIPTION_ID to ${{ parameters.AZURE_SUBSCRIPTION_ID }}"

  - pwsh: |
      cd ${{ parameters.terraformFolder }}

      Write-Host "ARM_USE_OIDC: $($env:ARM_USE_OIDC)"
      Write-Host "AZURE_CLIENT_ID: $($env:AZURE_CLIENT_ID)"
      Write-Host "AZURE_TENANT_ID: $($env:AZURE_TENANT_ID)"
      Write-Host "ARM_SUBSCRIPTION_ID: $($env:ARM_SUBSCRIPTION_ID)"
 
      if ("${{ parameters.terraformBackendFile }}" -ne "") {
        terraform init -backend-config="${{ parameters.terraformBackendFile }}" -var-file="${{ parameters.terraformVarFile }}"
      } else {
        terraform init -backend-config="subscription_id=${{ parameters.backendSubscriptionId }}" -backend-config="resource_group_name=${{ parameters.backendResourceGroupName }}" -backend-config="storage_account_name=${{ parameters.backendStorageAccountName }}" -backend-config="container_name=${{ parameters.backendContainerName }}" -backend-config="key=${{ parameters.backendKey }}" -var-file="${{ parameters.terraformVarFile }}"
      }
    
  - pwsh: |
      cd ${{ parameters.terraformFolder }}
      terraform validate

  - pwsh: |
      cd ${{ parameters.terraformFolder }}
      terraform plan -var-file=${{ parameters.terraformVarFile }}

  - pwsh: |
      cd ${{ parameters.terraformFolder }}
      terraform apply -auto-approve -var-file=${{ parameters.terraformVarFile }}