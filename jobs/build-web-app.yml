parameters:
- name: jobName
  type: string
  default: BuildWebApp
- name: dependsOn
  type: object
  default: []
- name: publishArtifact
  type: boolean
  default: false
- name: projectName
  type: string
  default: 'web-app'
- name: nugetConfigPath
  type: string
  default: ''
- name: codeQlEnabled
  type: boolean
  default: false

jobs:
- job: ${{ parameters.jobName }}
  dependsOn: ${{ parameters.dependsOn }}

  workspace:
    clean: all

  variables:
    buildConfiguration: 'Release'

  steps:
  - task: AdvancedSecurity-Codeql-Init@1
    condition: and(succeeded(), eq('${{ parameters.codeQlEnabled }}', 'true'))
    inputs:
      languages: "csharp, javascript" # Supported languages: csharp, cpp, go, java, javascript, python, ruby, swift

  - task: UseDotNet@2
    inputs:
      version: 6.0.x
      performMultiLevelLookup: true
      includePreviewVersions: true
  
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/${{ parameters.projectName }}.csproj'
      ${{ if ne(parameters.nugetConfigPath, '') }}:
        feedsToUse: 'config'
        nugetConfigPath: ${{ parameters.nugetConfigPath }}

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/${{ parameters.projectName }}.csproj'
      arguments: '--configuration $(buildConfiguration)'
    displayName: 'dotnet build $(buildConfiguration)'

  - task: AdvancedSecurity-Dependency-Scanning@1 # More details on this task: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/advanced-security-dependency-scanning-v1?view=azure-pipelines
    condition: and(succeeded(), eq('${{ parameters.codeQlEnabled }}', 'true'))

  - task: AdvancedSecurity-Codeql-Analyze@1 # More details on this task: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/advanced-security-codeql-analyze-v1?view=azure-pipelines
    condition: and(succeeded(), eq('${{ parameters.codeQlEnabled }}', 'true'))

  - task: DotNetCoreCLI@2
    condition: and(succeeded(), eq('${{ parameters.publishArtifact }}', 'true'))
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/${{ parameters.projectName }}.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/${{ parameters.projectName }}.zip'
    displayName: 'dotnet publish $(buildConfiguration)'

  - publish: '$(Build.artifactStagingDirectory)/${{ parameters.projectName }}.zip'
    condition: and(succeeded(), eq('${{ parameters.publishArtifact }}', 'true'))
    displayName: Publish ${{ parameters.projectName }} artifact
    artifact: ${{ parameters.projectName }}